package dclab.powerdatabackend.dao

import dclab.powerdatabackend.model.File
import org.apache.ibatis.annotations.*
import org.apache.ibatis.type.JdbcType
import org.springframework.stereotype.Repository

@Mapper
@Repository
interface FileMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated
     */
    @Insert("insert into file (fileID, fileName, ", "location, type, ", "creator, createTime, ", "size)", "values (#{fileid,jdbcType=INTEGER}, #{filename,jdbcType=VARCHAR}, ", "#{location,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ", "#{creator,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}, ", "#{size,jdbcType=VARCHAR})")
    fun insert(record: File): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated
     */
    @Select("select", "fileID, fileName, location, type, creator, createTime, size", "from file")
    @Results(Result(column = "fileID", property = "fileid", jdbcType = JdbcType.INTEGER), Result(column = "fileName", property = "filename", jdbcType = JdbcType.VARCHAR), Result(column = "location", property = "location", jdbcType = JdbcType.VARCHAR), Result(column = "type", property = "type", jdbcType = JdbcType.VARCHAR), Result(column = "creator", property = "creator", jdbcType = JdbcType.VARCHAR), Result(column = "createTime", property = "createtime", jdbcType = JdbcType.VARCHAR), Result(column = "size", property = "size", jdbcType = JdbcType.VARCHAR))
    fun selectAll(): List<File>

}