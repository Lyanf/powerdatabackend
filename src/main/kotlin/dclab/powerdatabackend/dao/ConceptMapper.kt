package dclab.powerdatabackend.dao

import dclab.powerdatabackend.model.Concept
import org.apache.ibatis.annotations.Delete
import org.apache.ibatis.annotations.Insert
import org.apache.ibatis.annotations.Result
import org.apache.ibatis.annotations.Results
import org.apache.ibatis.annotations.Select
import org.apache.ibatis.annotations.Update
import org.apache.ibatis.type.JdbcType

interface ConceptMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table concept
     *
     * @mbg.generated
     */
    @Delete("delete from concept", "where concept = #{concept,jdbcType=VARCHAR}")
    fun deleteByPrimaryKey(concept: String): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table concept
     *
     * @mbg.generated
     */
    @Insert("insert into concept (concept, type, ", "createTime, description, ", "englishName, creator)", "values (#{concept,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ", "#{createtime,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ", "#{englishname,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR})")
    fun insert(record: Concept): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table concept
     *
     * @mbg.generated
     */
    @Select("select", "concept, type, createTime, description, englishName, creator", "from concept", "where concept = #{concept,jdbcType=VARCHAR}")
    @Results(Result(column = "concept", property = "concept", jdbcType = JdbcType.VARCHAR, id = true), Result(column = "type", property = "type", jdbcType = JdbcType.VARCHAR), Result(column = "createTime", property = "createtime", jdbcType = JdbcType.VARCHAR), Result(column = "description", property = "description", jdbcType = JdbcType.VARCHAR), Result(column = "englishName", property = "englishname", jdbcType = JdbcType.VARCHAR), Result(column = "creator", property = "creator", jdbcType = JdbcType.VARCHAR))
    fun selectByPrimaryKey(concept: String): Concept

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table concept
     *
     * @mbg.generated
     */
    @Select("select", "concept, type, createTime, description, englishName, creator", "from concept")
    @Results(Result(column = "concept", property = "concept", jdbcType = JdbcType.VARCHAR, id = true), Result(column = "type", property = "type", jdbcType = JdbcType.VARCHAR), Result(column = "createTime", property = "createtime", jdbcType = JdbcType.VARCHAR), Result(column = "description", property = "description", jdbcType = JdbcType.VARCHAR), Result(column = "englishName", property = "englishname", jdbcType = JdbcType.VARCHAR), Result(column = "creator", property = "creator", jdbcType = JdbcType.VARCHAR))
    fun selectAll(): List<Concept>

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table concept
     *
     * @mbg.generated
     */
    @Update("update concept", "set type = #{type,jdbcType=VARCHAR},", "createTime = #{createtime,jdbcType=VARCHAR},", "description = #{description,jdbcType=VARCHAR},", "englishName = #{englishname,jdbcType=VARCHAR},", "creator = #{creator,jdbcType=VARCHAR}", "where concept = #{concept,jdbcType=VARCHAR}")
    fun updateByPrimaryKey(record: Concept): Int
}